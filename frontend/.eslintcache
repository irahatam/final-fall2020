[{"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/index.js":"1","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/App.js":"2","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/reportWebVitals.js":"3","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/Home.js":"4","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/CreateAccount.js":"5","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/Login.js":"6","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/components/Header.js":"7"},{"size":500,"mtime":1606969802693,"results":"8","hashOfConfig":"9"},{"size":4083,"mtime":1607992617901,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1606969802695,"results":"11","hashOfConfig":"9"},{"size":779,"mtime":1607989128478,"results":"12","hashOfConfig":"9"},{"size":155,"mtime":1607992729224,"results":"13","hashOfConfig":"9"},{"size":130,"mtime":1607992699314,"results":"14","hashOfConfig":"9"},{"size":486,"mtime":1607992628684,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"153e1e9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/index.js",[],["33","34"],"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/App.js",["35"],"import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { Route, BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n// Pages\nimport CreateAccount from \"./containers/CreateAccount\";\nimport Header from \"./components/Header\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [userAuthInfo, setUserAuthInfo] = useState(false);\n\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API,\n    authDomain: \"final-project-fall-2020-49de6.firebaseapp.com\",\n    projectId: \"final-project-fall-2020-49de6\",\n    storageBucket: \"final-project-fall-2020-49de6.appspot.com\",\n    messagingSenderId: \"82042070542\",\n    appId: \"1:82042070542:web:e08451424e516e3361fe5f\",\n  };\n\n  // Ensure app is initialized when it is ready\n  useEffect(() => {\n    // Initializes Firebase\n    // if firebase is not already initialized...\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n  }, [firebaseConfig]);\n\n  // Check to see if user is logged in...\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // user is logged in\n        setLoggedIn(true);\n        setUserAuthInfo(user);\n      } else {\n        // no user\n        setLoggedIn(false);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  // Function for logging in\n  function LoginFunction(e) {\n    // This is what you will run when you want to login\n    e.preventDefault();\n    const email = e.currentTarget.loginEmail.value;\n    const password = e.currentTarget.loginPassword.value;\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(function (response) {\n        console.log(\"LOGIN RESPONSE\", response);\n        setLoggedIn(true);\n      })\n      .catch(function (error) {\n        console.log(\"LOGIN ERROR\", error);\n      });\n  }\n\n  // Function for logging out\n  function LogoutFunction() {\n    // Function to run when you want to logout\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        setLoggedIn(false);\n        setUserAuthInfo({});\n      })\n      .catch(function (error) {\n        console.log(\"LOGOUT ERROR\", error);\n      });\n  }\n\n  // Function for creating an account\n  function CreateAccountFunction(e) {\n    e.preventDefault();\n    const email = e.currentTarget.createEmail.value;\n    const password = e.currentTarget.createPassword.value;\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(function (response) {\n        console.log(\"VALID ACCOUNT CREATED FOR:\", email, response);\n        setLoggedIn(true);\n      })\n      .catch(function (error) {\n        console.log(\"ACCOUNT CREATION FAILED\", error);\n      });\n  }\n\n  if (loading) return null;\n\n  return (\n    <div className=\"App\">\n      <Header loggedIn={loggedIn} LogoutFunction={LogoutFunction} />\n      <Router>\n        <Route exact path=\"/login\">\n          {/* if someone is logged in, do not take them to login page \n            - take them to user profile */}\n\n          {!loggedIn ? (\n            <Login LoginFunction={LoginFunction} />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n\n        <Route exact path=\"/create-account\">\n          {/* if someone is logged in , do not take them to createaccount \n            - take them to user profile */}\n\n          {!loggedIn ? (\n            <CreateAccount CreateAccountFunction={CreateAccountFunction} />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n\n        <Route exact path=\"/\">\n          {/* if someone is not logged in, do not take them to user profile page \n            - take them to login */}\n\n          {!loggedIn ? (\n            <Redirect to=\"/login\" />\n          ) : (\n            <Home userAuthInfo={userAuthInfo} />\n          )}\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/reportWebVitals.js",[],"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/Home.js",[],"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/CreateAccount.js",[],"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/containers/Login.js",[],"/Users/abanyo/Documents/Dynamic-Web-2020/final-project/frontend/src/components/Header.js",["36"],"import React from \"react\";\n\nfunction Header({ loggedIn, LogoutFunction }) {\n  return (\n    <header className=\"Header\">\n      <nav>\n        {loggedIn ? (\n          <>\n            <a href=\"/\">User Profile</a>\n            <a onClick={() => LogoutFunction()}>Logout</a>\n          </>\n        ) : (\n          <>\n            <a href=\"/login\">Login</a>\n            <a href=\"/create-account\">Create Account</a>\n          </>\n        )}\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":18,"column":9,"nodeType":"43","endLine":25,"endColumn":4},{"ruleId":"44","severity":1,"message":"45","line":10,"column":13,"nodeType":"46","endLine":10,"endColumn":49},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","The 'firebaseConfig' object makes the dependencies of useEffect Hook (at line 34) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'firebaseConfig' in its own useMemo() Hook.","VariableDeclarator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]